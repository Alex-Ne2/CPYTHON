// This file is generated by Tools/cases_generator/tier2_super_matcher_generator.py
// from:
//   Python/bytecodes.c
// Do not edit!

#ifdef TIER_ONE
    #error "This file is for Tier 2 only"
#endif
#define TIER_TWO 2

        case _GUARD_BOTH_INT: {
            next_instr++;
            switch (next_instr->opcode) {
                case _BINARY_OP_MULTIPLY_INT: {
                    REPLACE_OP(this_instr, _GUARD_BOTH_INT__BINARY_OP_MULTIPLY_INT, this_instr[0]->oparg, this_instr[0]->operand);
                    next_instr++;
                    break;
                }
            }
            break;
        }

        case _GUARD_BOTH_INT: {
            next_instr++;
            switch (next_instr->opcode) {
                case _BINARY_OP_ADD_INT: {
                    REPLACE_OP(this_instr, _GUARD_BOTH_INT__BINARY_OP_ADD_INT, this_instr[0]->oparg, this_instr[0]->operand);
                    next_instr++;
                    break;
                }
            }
            break;
        }

        case _GUARD_BOTH_INT: {
            next_instr++;
            switch (next_instr->opcode) {
                case _BINARY_OP_SUBTRACT_INT: {
                    REPLACE_OP(this_instr, _GUARD_BOTH_INT__BINARY_OP_SUBTRACT_INT, this_instr[0]->oparg, this_instr[0]->operand);
                    next_instr++;
                    break;
                }
            }
            break;
        }

        case _GUARD_BOTH_FLOAT: {
            next_instr++;
            switch (next_instr->opcode) {
                case _BINARY_OP_MULTIPLY_FLOAT: {
                    REPLACE_OP(this_instr, _GUARD_BOTH_FLOAT__BINARY_OP_MULTIPLY_FLOAT, this_instr[0]->oparg, this_instr[0]->operand);
                    next_instr++;
                    break;
                }
            }
            break;
        }

        case _GUARD_BOTH_FLOAT: {
            next_instr++;
            switch (next_instr->opcode) {
                case _BINARY_OP_ADD_FLOAT: {
                    REPLACE_OP(this_instr, _GUARD_BOTH_FLOAT__BINARY_OP_ADD_FLOAT, this_instr[0]->oparg, this_instr[0]->operand);
                    next_instr++;
                    break;
                }
            }
            break;
        }

        case _GUARD_BOTH_FLOAT: {
            next_instr++;
            switch (next_instr->opcode) {
                case _BINARY_OP_SUBTRACT_FLOAT: {
                    REPLACE_OP(this_instr, _GUARD_BOTH_FLOAT__BINARY_OP_SUBTRACT_FLOAT, this_instr[0]->oparg, this_instr[0]->operand);
                    next_instr++;
                    break;
                }
            }
            break;
        }

        case _GUARD_BOTH_UNICODE: {
            next_instr++;
            switch (next_instr->opcode) {
                case _BINARY_OP_ADD_UNICODE: {
                    REPLACE_OP(this_instr, _GUARD_BOTH_UNICODE__BINARY_OP_ADD_UNICODE, this_instr[0]->oparg, this_instr[0]->operand);
                    next_instr++;
                    break;
                }
            }
            break;
        }

        case _CHECK_CALL_BOUND_METHOD_EXACT_ARGS: {
            next_instr++;
            switch (next_instr->opcode) {
                case _INIT_CALL_BOUND_METHOD_EXACT_ARGS: {
                    next_instr++;
                    switch (next_instr->opcode) {
                        case _CHECK_FUNCTION_EXACT_ARGS: {
                            next_instr++;
                            switch (next_instr->opcode) {
                                case _CHECK_STACK_SPACE: {
                                    next_instr++;
                                    switch (next_instr->opcode) {
                                        case _INIT_CALL_PY_EXACT_ARGS: {
                                            next_instr++;
                                            switch (next_instr->opcode) {
                                                case _SAVE_RETURN_OFFSET: {
                                                    next_instr++;
                                                    switch (next_instr->opcode) {
                                                        case _PUSH_FRAME: {
                                                            REPLACE_OP(this_instr, _CALL_BOUND_METHOD_EXACT_ARGS, this_instr[5]->oparg, this_instr[2]->operand);
                                                            next_instr++;
                                                            break;
                                                        }
                                                    }
                                                    break;
                                                }
                                            }
                                            break;
                                        }
                                    }
                                    break;
                                }
                            }
                            break;
                        }
                    }
                    break;
                }
            }
            break;
        }

#undef TIER_TWO
