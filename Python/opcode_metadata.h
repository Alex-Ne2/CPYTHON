// This file is generated by Tools/cases_generator/generate_cases.py --metadata
// from Python/bytecodes.c
// Do not edit!
struct {
    int n_popped;
    int n_pushed;
} _PyOpcode_opcode_metadata[256] = {
    [NOP] = { .n_popped = 0, .n_pushed = 0 },
    [RESUME] = { .n_popped = 0, .n_pushed = 0 },
    [LOAD_CLOSURE] = { .n_popped = 0, .n_pushed = 1 },
    [LOAD_FAST_CHECK] = { .n_popped = 0, .n_pushed = 1 },
    [LOAD_FAST] = { .n_popped = 0, .n_pushed = 1 },
    [LOAD_CONST] = { .n_popped = 0, .n_pushed = 1 },
    [STORE_FAST] = { .n_popped = 1, .n_pushed = 0 },
    [LOAD_FAST__LOAD_FAST] = { .n_popped = 0, .n_pushed = 2 },
    [LOAD_FAST__LOAD_CONST] = { .n_popped = 0, .n_pushed = 2 },
    [STORE_FAST__LOAD_FAST] = { .n_popped = 1, .n_pushed = 1 },
    [STORE_FAST__STORE_FAST] = { .n_popped = 2, .n_pushed = 0 },
    [LOAD_CONST__LOAD_FAST] = { .n_popped = 0, .n_pushed = 2 },
    [POP_TOP] = { .n_popped = 1, .n_pushed = 0 },
    [PUSH_NULL] = { .n_popped = 0, .n_pushed = 1 },
    [UNARY_POSITIVE] = { .n_popped = 1, .n_pushed = 1 },
    [UNARY_NEGATIVE] = { .n_popped = 1, .n_pushed = 1 },
    [UNARY_NOT] = { .n_popped = 1, .n_pushed = 1 },
    [UNARY_INVERT] = { .n_popped = 1, .n_pushed = 1 },
    [BINARY_OP_MULTIPLY_INT] = { .n_popped = 2, .n_pushed = 1 },
    [BINARY_OP_MULTIPLY_FLOAT] = { .n_popped = 2, .n_pushed = 1 },
    [BINARY_OP_SUBTRACT_INT] = { .n_popped = 2, .n_pushed = 1 },
    [BINARY_OP_SUBTRACT_FLOAT] = { .n_popped = 2, .n_pushed = 1 },
    [BINARY_OP_ADD_UNICODE] = { .n_popped = 2, .n_pushed = 1 },
    [BINARY_OP_INPLACE_ADD_UNICODE] = { .n_popped = 2, .n_pushed = 0 },
    [BINARY_OP_ADD_FLOAT] = { .n_popped = 2, .n_pushed = 1 },
    [BINARY_OP_ADD_INT] = { .n_popped = 2, .n_pushed = 1 },
    [BINARY_SUBSCR] = { .n_popped = 2, .n_pushed = 1 },
    [BINARY_SLICE] = { .n_popped = 3, .n_pushed = 1 },
    [STORE_SLICE] = { .n_popped = 4, .n_pushed = 0 },
    [BINARY_SUBSCR_LIST_INT] = { .n_popped = 2, .n_pushed = 1 },
    [BINARY_SUBSCR_TUPLE_INT] = { .n_popped = 2, .n_pushed = 1 },
    [BINARY_SUBSCR_DICT] = { .n_popped = 2, .n_pushed = 1 },
    [BINARY_SUBSCR_GETITEM] = { .n_popped = 2, .n_pushed = 1 },
    [LIST_APPEND] = { .n_popped = 1, .n_pushed = 0 },
    [SET_ADD] = { .n_popped = 1, .n_pushed = 0 },
    [STORE_SUBSCR] = { .n_popped = 3, .n_pushed = 0 },
    [STORE_SUBSCR_LIST_INT] = { .n_popped = 3, .n_pushed = 0 },
    [STORE_SUBSCR_DICT] = { .n_popped = 3, .n_pushed = 0 },
    [DELETE_SUBSCR] = { .n_popped = 2, .n_pushed = 0 },
    [PRINT_EXPR] = { .n_popped = 1, .n_pushed = 0 },
    [RAISE_VARARGS] = { .n_popped = -1, .n_pushed = -1 },
    [INTERPRETER_EXIT] = { .n_popped = 1, .n_pushed = 0 },
    [RETURN_VALUE] = { .n_popped = 1, .n_pushed = 0 },
    [GET_AITER] = { .n_popped = 1, .n_pushed = 1 },
    [GET_ANEXT] = { .n_popped = 1, .n_pushed = 2 },
    [GET_AWAITABLE] = { .n_popped = 1, .n_pushed = 1 },
    [SEND] = { .n_popped = -1, .n_pushed = -1 },
    [ASYNC_GEN_WRAP] = { .n_popped = 1, .n_pushed = 1 },
    [YIELD_VALUE] = { .n_popped = 1, .n_pushed = 0 },
    [POP_EXCEPT] = { .n_popped = 1, .n_pushed = 0 },
    [RERAISE] = { .n_popped = -1, .n_pushed = -1 },
    [PREP_RERAISE_STAR] = { .n_popped = 2, .n_pushed = 1 },
    [END_ASYNC_FOR] = { .n_popped = -1, .n_pushed = -1 },
    [CLEANUP_THROW] = { .n_popped = -1, .n_pushed = -1 },
    [STOPITERATION_ERROR] = { .n_popped = -1, .n_pushed = -1 },
    [LOAD_ASSERTION_ERROR] = { .n_popped = 0, .n_pushed = 1 },
    [LOAD_BUILD_CLASS] = { .n_popped = 0, .n_pushed = 1 },
    [STORE_NAME] = { .n_popped = 1, .n_pushed = 0 },
    [DELETE_NAME] = { .n_popped = 0, .n_pushed = 0 },
    [UNPACK_SEQUENCE] = { .n_popped = -1, .n_pushed = -1 },
    [UNPACK_SEQUENCE_TWO_TUPLE] = { .n_popped = -1, .n_pushed = -1 },
    [UNPACK_SEQUENCE_TUPLE] = { .n_popped = -1, .n_pushed = -1 },
    [UNPACK_SEQUENCE_LIST] = { .n_popped = -1, .n_pushed = -1 },
    [UNPACK_EX] = { .n_popped = -1, .n_pushed = -1 },
    [STORE_ATTR] = { .n_popped = 2, .n_pushed = 0 },
    [DELETE_ATTR] = { .n_popped = 1, .n_pushed = 0 },
    [STORE_GLOBAL] = { .n_popped = 1, .n_pushed = 0 },
    [DELETE_GLOBAL] = { .n_popped = 0, .n_pushed = 0 },
    [LOAD_NAME] = { .n_popped = 0, .n_pushed = 1 },
    [LOAD_GLOBAL] = { .n_popped = -1, .n_pushed = -1 },
    [LOAD_GLOBAL_MODULE] = { .n_popped = -1, .n_pushed = -1 },
    [LOAD_GLOBAL_BUILTIN] = { .n_popped = -1, .n_pushed = -1 },
    [DELETE_FAST] = { .n_popped = 0, .n_pushed = 0 },
    [MAKE_CELL] = { .n_popped = 0, .n_pushed = 0 },
    [DELETE_DEREF] = { .n_popped = 0, .n_pushed = 0 },
    [LOAD_CLASSDEREF] = { .n_popped = 0, .n_pushed = 1 },
    [LOAD_DEREF] = { .n_popped = 0, .n_pushed = 1 },
    [STORE_DEREF] = { .n_popped = 1, .n_pushed = 0 },
    [COPY_FREE_VARS] = { .n_popped = 0, .n_pushed = 0 },
    [BUILD_STRING] = { .n_popped = -1, .n_pushed = -1 },
    [BUILD_TUPLE] = { .n_popped = -1, .n_pushed = -1 },
    [BUILD_LIST] = { .n_popped = -1, .n_pushed = -1 },
    [LIST_TO_TUPLE] = { .n_popped = 1, .n_pushed = 1 },
    [LIST_EXTEND] = { .n_popped = 1, .n_pushed = 0 },
    [SET_UPDATE] = { .n_popped = 1, .n_pushed = 0 },
    [BUILD_SET] = { .n_popped = -1, .n_pushed = -1 },
    [BUILD_MAP] = { .n_popped = -1, .n_pushed = -1 },
    [SETUP_ANNOTATIONS] = { .n_popped = 0, .n_pushed = 0 },
    [BUILD_CONST_KEY_MAP] = { .n_popped = -1, .n_pushed = -1 },
    [DICT_UPDATE] = { .n_popped = 1, .n_pushed = 0 },
    [DICT_MERGE] = { .n_popped = 1, .n_pushed = 0 },
    [MAP_ADD] = { .n_popped = 2, .n_pushed = 0 },
    [LOAD_ATTR] = { .n_popped = -1, .n_pushed = -1 },
    [LOAD_ATTR_INSTANCE_VALUE] = { .n_popped = -1, .n_pushed = -1 },
    [LOAD_ATTR_MODULE] = { .n_popped = -1, .n_pushed = -1 },
    [LOAD_ATTR_WITH_HINT] = { .n_popped = -1, .n_pushed = -1 },
    [LOAD_ATTR_SLOT] = { .n_popped = -1, .n_pushed = -1 },
    [LOAD_ATTR_CLASS] = { .n_popped = -1, .n_pushed = -1 },
    [LOAD_ATTR_PROPERTY] = { .n_popped = -1, .n_pushed = -1 },
    [LOAD_ATTR_GETATTRIBUTE_OVERRIDDEN] = { .n_popped = -1, .n_pushed = -1 },
    [STORE_ATTR_INSTANCE_VALUE] = { .n_popped = 2, .n_pushed = 0 },
    [STORE_ATTR_WITH_HINT] = { .n_popped = 2, .n_pushed = 0 },
    [STORE_ATTR_SLOT] = { .n_popped = 2, .n_pushed = 0 },
    [COMPARE_OP] = { .n_popped = 2, .n_pushed = 1 },
    [COMPARE_OP_FLOAT_JUMP] = { .n_popped = 3, .n_pushed = 1 },
    [COMPARE_OP_INT_JUMP] = { .n_popped = 3, .n_pushed = 1 },
    [COMPARE_OP_STR_JUMP] = { .n_popped = 3, .n_pushed = 1 },
    [IS_OP] = { .n_popped = 2, .n_pushed = 1 },
    [CONTAINS_OP] = { .n_popped = 2, .n_pushed = 1 },
    [CHECK_EG_MATCH] = { .n_popped = -1, .n_pushed = -1 },
    [CHECK_EXC_MATCH] = { .n_popped = 2, .n_pushed = 2 },
    [IMPORT_NAME] = { .n_popped = 2, .n_pushed = 1 },
    [IMPORT_STAR] = { .n_popped = 1, .n_pushed = 0 },
    [IMPORT_FROM] = { .n_popped = 1, .n_pushed = 2 },
    [JUMP_FORWARD] = { .n_popped = 0, .n_pushed = 0 },
    [JUMP_BACKWARD] = { .n_popped = 0, .n_pushed = 0 },
    [POP_JUMP_IF_FALSE] = { .n_popped = -1, .n_pushed = -1 },
    [POP_JUMP_IF_TRUE] = { .n_popped = -1, .n_pushed = -1 },
    [POP_JUMP_IF_NOT_NONE] = { .n_popped = -1, .n_pushed = -1 },
    [POP_JUMP_IF_NONE] = { .n_popped = -1, .n_pushed = -1 },
    [JUMP_IF_FALSE_OR_POP] = { .n_popped = -1, .n_pushed = -1 },
    [JUMP_IF_TRUE_OR_POP] = { .n_popped = -1, .n_pushed = -1 },
    [JUMP_BACKWARD_NO_INTERRUPT] = { .n_popped = -1, .n_pushed = -1 },
    [GET_LEN] = { .n_popped = -1, .n_pushed = -1 },
    [MATCH_CLASS] = { .n_popped = -1, .n_pushed = -1 },
    [MATCH_MAPPING] = { .n_popped = -1, .n_pushed = -1 },
    [MATCH_SEQUENCE] = { .n_popped = -1, .n_pushed = -1 },
    [MATCH_KEYS] = { .n_popped = -1, .n_pushed = -1 },
    [GET_ITER] = { .n_popped = -1, .n_pushed = -1 },
    [GET_YIELD_FROM_ITER] = { .n_popped = -1, .n_pushed = -1 },
    [FOR_ITER] = { .n_popped = -1, .n_pushed = -1 },
    [FOR_ITER_LIST] = { .n_popped = -1, .n_pushed = -1 },
    [FOR_ITER_TUPLE] = { .n_popped = -1, .n_pushed = -1 },
    [FOR_ITER_RANGE] = { .n_popped = -1, .n_pushed = -1 },
    [FOR_ITER_GEN] = { .n_popped = -1, .n_pushed = -1 },
    [BEFORE_ASYNC_WITH] = { .n_popped = -1, .n_pushed = -1 },
    [BEFORE_WITH] = { .n_popped = -1, .n_pushed = -1 },
    [WITH_EXCEPT_START] = { .n_popped = 4, .n_pushed = 5 },
    [PUSH_EXC_INFO] = { .n_popped = -1, .n_pushed = -1 },
    [LOAD_ATTR_METHOD_WITH_VALUES] = { .n_popped = -1, .n_pushed = -1 },
    [LOAD_ATTR_METHOD_WITH_DICT] = { .n_popped = -1, .n_pushed = -1 },
    [LOAD_ATTR_METHOD_NO_DICT] = { .n_popped = -1, .n_pushed = -1 },
    [LOAD_ATTR_METHOD_LAZY_DICT] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_BOUND_METHOD_EXACT_ARGS] = { .n_popped = -1, .n_pushed = -1 },
    [KW_NAMES] = { .n_popped = -1, .n_pushed = -1 },
    [CALL] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_PY_EXACT_ARGS] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_PY_WITH_DEFAULTS] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_NO_KW_TYPE_1] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_NO_KW_STR_1] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_NO_KW_TUPLE_1] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_BUILTIN_CLASS] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_NO_KW_BUILTIN_O] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_NO_KW_BUILTIN_FAST] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_BUILTIN_FAST_WITH_KEYWORDS] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_NO_KW_LEN] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_NO_KW_ISINSTANCE] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_NO_KW_LIST_APPEND] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_NO_KW_METHOD_DESCRIPTOR_O] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_METHOD_DESCRIPTOR_FAST_WITH_KEYWORDS] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_NO_KW_METHOD_DESCRIPTOR_NOARGS] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_NO_KW_METHOD_DESCRIPTOR_FAST] = { .n_popped = -1, .n_pushed = -1 },
    [CALL_FUNCTION_EX] = { .n_popped = -1, .n_pushed = -1 },
    [MAKE_FUNCTION] = { .n_popped = -1, .n_pushed = -1 },
    [RETURN_GENERATOR] = { .n_popped = -1, .n_pushed = -1 },
    [BUILD_SLICE] = { .n_popped = -1, .n_pushed = -1 },
    [FORMAT_VALUE] = { .n_popped = -1, .n_pushed = -1 },
    [COPY] = { .n_popped = -1, .n_pushed = -1 },
    [BINARY_OP] = { .n_popped = 2, .n_pushed = 1 },
    [SWAP] = { .n_popped = -1, .n_pushed = -1 },
    [EXTENDED_ARG] = { .n_popped = -1, .n_pushed = -1 },
    [CACHE] = { .n_popped = -1, .n_pushed = -1 },
};
