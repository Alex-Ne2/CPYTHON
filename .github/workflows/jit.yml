name: JIT
on:
  pull_request:
    branches:
    - 'main'
    - '3.*'
    paths:
      - '**jit**'
      - 'Python/bytecodes.c'
      - 'Python/optimizer*.c'
      - '!Python/perf_jit_trampoline.c'
      - '!**/*.md'
      - '!**/*.ini'
  push:
    branches:
    - 'main'
    - '3.*'
    paths:
      - '**jit**'
      - 'Python/bytecodes.c'
      - 'Python/optimizer*.c'
      - '!Python/perf_jit_trampoline.c'
      - '!**/*.md'
      - '!**/*.ini'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  llvm: 19

jobs:
  interpreter:
    name: Interpreter (Debug)
    runs-on: ubuntu-24.04
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4
      - name: Build tier two interpreter
        run: |
          ./configure --enable-experimental-jit=interpreter --with-pydebug
          make all --jobs 4
      - name: Test tier two interpreter
        run: |
          ./python -m test --multiprocess 0 --timeout 4500 --verbose2 --verbose3

  jit-windows:
    name: Windows (${{ matrix.arch }}, ${{ matrix.debug && 'Debug' || 'Release' }})
    needs: interpreter
    runs-on: windows-latest
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x64
          - Win32
          - ARM64
        debug:
          - true
          - false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Native Windows
        if: matrix.arch != 'ARM64'
        run: |
          choco install llvm --allow-downgrade --no-progress --version ${{ env.llvm }}.1.0
          ./PCbuild/build.bat --experimental-jit ${{ matrix.debug && '-d' || '' }} -p ${{ matrix.arch }}
          ./PCbuild/rt.bat ${{ matrix.debug && '-d' || '' }} -p ${{ matrix.arch }} -q --multiprocess 0 --timeout 4500 --verbose2 --verbose3

      # No tests (yet):
      - name: Emulated Windows
        if: matrix.arch == 'ARM64'
        run: |
          choco install llvm --allow-downgrade --no-progress --version ${{ env.llvm }}.1.0
          ./PCbuild/build.bat --experimental-jit ${{ matrix.debug && '-d' || '' }} -p ${{ matrix.arch }}

  jit-mac:
    name: macOS (${{ matrix.os == 'macos-14' && 'aarch64' || 'x86_64' }}, ${{ matrix.debug && 'Debug' || 'Release' }})
    needs: interpreter
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        # macos-14 are M1, macos-13 are default GHA Intel.
        os:
        - macos-14
        - macos-13
        debug:
          - true
          - false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
        # The `find` line is required as a result of https://github.com/actions/runner-images/issues/9966.
        # This is a bug in the macOS runner image where the pre-installed Python is installed in the same
        # directory as the Homebrew Python, which causes the build to fail for macos-13. This line removes
        # the symlink to the pre-installed Python so that the Homebrew Python is used instead.
      - name: ${{ runner.os }} (${{ runner.arch }})
        run: |
          brew update
          find /usr/local/bin -lname '*/Library/Frameworks/Python.framework/*' -delete
          brew install llvm@${{ env.llvm }}
          export SDKROOT="$(xcrun --show-sdk-path)"
          ./configure --enable-experimental-jit ${{ matrix.debug && '--with-pydebug' || '' }}
          make all --jobs 4
          ./python.exe -m test --multiprocess 0 --timeout 4500 --verbose2 --verbose3

  jit-ubuntu:
    name: Ubuntu (${{ matrix.os == 'ubuntu-24.04-aarch64' && 'aarch64' || 'x86_64' }}, ${{ matrix.debug && 'Debug' || 'Release' }})
    needs: interpreter
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-24.04
        - ubuntu-24.04-aarch64
        debug:
          - true
          - false
        is-fork:  # only used for the exclusion trick
        - ${{ github.repository_owner != 'python' }}
        exclude:
        - os: ubuntu-24.04-aarch64
          is-fork: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: ${{ runner.os }} (${{ runner.arch }})
        run: |
          sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)" ./llvm.sh ${{ env.llvm }}
          export PATH="$(llvm-config-${{ env.llvm }} --bindir):$PATH"
          ./configure --enable-experimental-jit ${{ matrix.debug && '--with-pydebug' || '' }}
          make all --jobs 4
          ./python -m test --multiprocess 0 --timeout 4500 --verbose2 --verbose3

  jit-with-disabled-gil:
    name: Free-Threaded (Debug)
    needs: interpreter
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Build with JIT enabled and GIL disabled
        run: |
          sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)" ./llvm.sh ${{ env.llvm }}
          export PATH="$(llvm-config-${{ env.llvm }} --bindir):$PATH"
          ./configure --enable-experimental-jit --with-pydebug --disable-gil
          make all --jobs 4
      - name: Run tests
        run: |
          ./python -m test --multiprocess 0 --timeout 4500 --verbose2 --verbose3
