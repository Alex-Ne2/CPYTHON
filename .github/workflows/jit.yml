name: JIT

on: [push, workflow_dispatch]

permissions:
  contents: read

jobs:
  jit:
    name: JIT / ${{ matrix.debug && 'Debug' || 'Release' }} / LLVM ${{ matrix.llvm }} / ${{ matrix.os }} / ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        debug: [false, true]
        llvm: [14, 15, 16]
        os: [macOS, Ubuntu, Windows]
        # This is awkward, but whatever...
        platform: [x64, Win32]
        exclude:
          # Looks like LLVM doesn't provide Intel macOS binaries anymore...
          - llvm: 16
            os: macOS
          # Duh...
          - os: macOS
            platform: Win32
          - os: Ubuntu
            platform: Win32
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      # libtinfo.so.5 not found when compiling stencils:
      - if: matrix.os == 'Ubuntu' && matrix.llvm == 16
        run: sudo apt install libtinfo5
      - uses: KyleMayes/install-llvm-action@v1
        with:
          version: ${{ matrix.llvm }}
          directory: ${{ runner.temp }}/llvm
      - if: matrix.os == 'macOS'
        run: |
          export SDKROOT=$(xcrun --show-sdk-path)
          ./configure${{ matrix.debug && ' --with-pydebug' || '' }}
          make all
          ./python.exe -c 'import sys; assert sys._support_tier == 1, sys._support_tier'
          ./python.exe -m test -j0 -wW
      - if: matrix.os == 'Ubuntu'
        run: |
          ./configure${{ matrix.debug && ' --with-pydebug' || '' }}
          make all
          ./python -c 'import sys; assert sys._support_tier == 1, sys._support_tier'
          ./python -m test -j0 -wW
      - if: matrix.os == 'Windows'
        run: |
          ./PCbuild/build${{ matrix.debug && ' -d' || '' }} -p ${{ matrix.platform }}
          ./python -c 'import sys; assert sys._support_tier == 1, sys._support_tier'
          ./PCbuild/rt${{ matrix.debug && ' -d' || '' }} -p ${{ matrix.platform }} -q -j0 -wW
