// This file is generated by Tools\cases_generator\generate_cases.py --macromap
// from Python\bytecodes.c
// Do not edit!

#ifndef Py_INTERNAL_OPCODE_MACRO_TO_MICRO_H
#define Py_INTERNAL_OPCODE_MACRO_TO_MICRO_H
#ifdef __cplusplus
extern "C" {
#endif

#ifndef Py_BUILD_CORE
#  error "this header requires Py_BUILD_CORE define"
#endif
#include "opcode.h"

extern const int _Py_MacroOpUOpCount[] = {
[NOP] = 1,
[RESUME] = 1,
[RESUME_QUICK] = 1,
[LOAD_CLOSURE] = 1,
[LOAD_FAST_CHECK] = 1,
[LOAD_FAST] = 1,
[LOAD_CONST] = 1,
[STORE_FAST] = 1,
[POP_TOP] = 1,
[PUSH_NULL] = 1,
[UNARY_NEGATIVE] = 1,
[UNARY_NOT] = 1,
[UNARY_INVERT] = 1,
[BINARY_OP_MULTIPLY_INT] = 1,
[BINARY_OP_MULTIPLY_FLOAT] = 1,
[BINARY_OP_SUBTRACT_INT] = 1,
[BINARY_OP_SUBTRACT_FLOAT] = 1,
[BINARY_OP_ADD_UNICODE] = 1,
[BINARY_OP_INPLACE_ADD_UNICODE] = 1,
[BINARY_OP_ADD_FLOAT] = 1,
[BINARY_OP_ADD_INT] = 2,
[BINARY_OP_ADD_INT_TYPE_CHECK] = 1,
[BINARY_OP_ADD_INT_REST] = 1,
[BINARY_SUBSCR] = 1,
[BINARY_SLICE] = 1,
[STORE_SLICE] = 1,
[BINARY_SUBSCR_LIST_INT] = 1,
[BINARY_SUBSCR_TUPLE_INT] = 1,
[BINARY_SUBSCR_DICT] = 1,
[BINARY_SUBSCR_GETITEM] = 1,
[LIST_APPEND] = 1,
[SET_ADD] = 1,
[STORE_SUBSCR] = 1,
[STORE_SUBSCR_LIST_INT] = 1,
[STORE_SUBSCR_DICT] = 1,
[DELETE_SUBSCR] = 1,
[CALL_INTRINSIC_1] = 1,
[RAISE_VARARGS] = 1,
[INTERPRETER_EXIT] = 1,
[RETURN_VALUE] = 1,
[RETURN_CONST] = 1,
[GET_AITER] = 1,
[GET_ANEXT] = 1,
[GET_AWAITABLE] = 1,
[SEND] = 1,
[YIELD_VALUE] = 1,
[POP_EXCEPT] = 1,
[RERAISE] = 1,
[PREP_RERAISE_STAR] = 1,
[END_ASYNC_FOR] = 1,
[CLEANUP_THROW] = 1,
[LOAD_ASSERTION_ERROR] = 1,
[LOAD_BUILD_CLASS] = 1,
[STORE_NAME] = 1,
[DELETE_NAME] = 1,
[UNPACK_SEQUENCE] = 1,
[UNPACK_SEQUENCE_TWO_TUPLE] = 1,
[UNPACK_SEQUENCE_TUPLE] = 1,
[UNPACK_SEQUENCE_LIST] = 1,
[UNPACK_EX] = 1,
[STORE_ATTR] = 1,
[DELETE_ATTR] = 1,
[STORE_GLOBAL] = 1,
[DELETE_GLOBAL] = 1,
[LOAD_NAME] = 1,
[LOAD_GLOBAL] = 1,
[LOAD_GLOBAL_MODULE] = 1,
[LOAD_GLOBAL_BUILTIN] = 1,
[DELETE_FAST] = 1,
[MAKE_CELL] = 1,
[DELETE_DEREF] = 1,
[LOAD_CLASSDEREF] = 1,
[LOAD_DEREF] = 1,
[STORE_DEREF] = 1,
[COPY_FREE_VARS] = 1,
[BUILD_STRING] = 1,
[BUILD_TUPLE] = 1,
[BUILD_LIST] = 1,
[LIST_EXTEND] = 1,
[SET_UPDATE] = 1,
[BUILD_SET] = 1,
[BUILD_MAP] = 1,
[SETUP_ANNOTATIONS] = 1,
[BUILD_CONST_KEY_MAP] = 1,
[DICT_UPDATE] = 1,
[DICT_MERGE] = 1,
[MAP_ADD] = 1,
[LOAD_ATTR] = 1,
[LOAD_ATTR_INSTANCE_VALUE] = 1,
[LOAD_ATTR_MODULE] = 1,
[LOAD_ATTR_WITH_HINT] = 1,
[LOAD_ATTR_SLOT] = 1,
[LOAD_ATTR_CLASS] = 1,
[LOAD_ATTR_PROPERTY] = 1,
[LOAD_ATTR_GETATTRIBUTE_OVERRIDDEN] = 1,
[STORE_ATTR_INSTANCE_VALUE] = 1,
[STORE_ATTR_WITH_HINT] = 1,
[STORE_ATTR_SLOT] = 1,
[COMPARE_OP] = 1,
[COMPARE_AND_BRANCH] = 1,
[COMPARE_AND_BRANCH_FLOAT] = 1,
[COMPARE_AND_BRANCH_INT] = 1,
[COMPARE_AND_BRANCH_STR] = 1,
[IS_OP] = 1,
[CONTAINS_OP] = 1,
[CHECK_EG_MATCH] = 1,
[CHECK_EXC_MATCH] = 1,
[IMPORT_NAME] = 1,
[IMPORT_FROM] = 1,
[JUMP_FORWARD] = 1,
[JUMP_BACKWARD] = 1,
[POP_JUMP_IF_FALSE] = 1,
[POP_JUMP_IF_TRUE] = 1,
[POP_JUMP_IF_NOT_NONE] = 1,
[POP_JUMP_IF_NONE] = 1,
[JUMP_IF_FALSE_OR_POP] = 1,
[JUMP_IF_TRUE_OR_POP] = 1,
[JUMP_BACKWARD_NO_INTERRUPT] = 1,
[GET_LEN] = 1,
[MATCH_CLASS] = 1,
[MATCH_MAPPING] = 1,
[MATCH_SEQUENCE] = 1,
[MATCH_KEYS] = 1,
[GET_ITER] = 1,
[GET_YIELD_FROM_ITER] = 1,
[FOR_ITER] = 1,
[FOR_ITER_LIST] = 1,
[FOR_ITER_TUPLE] = 1,
[FOR_ITER_RANGE] = 1,
[FOR_ITER_GEN] = 1,
[BEFORE_ASYNC_WITH] = 1,
[BEFORE_WITH] = 1,
[WITH_EXCEPT_START] = 1,
[PUSH_EXC_INFO] = 1,
[LOAD_ATTR_METHOD_WITH_VALUES] = 1,
[LOAD_ATTR_METHOD_NO_DICT] = 1,
[LOAD_ATTR_METHOD_LAZY_DICT] = 1,
[CALL_BOUND_METHOD_EXACT_ARGS] = 1,
[KW_NAMES] = 1,
[CALL] = 1,
[CALL_PY_EXACT_ARGS] = 1,
[CALL_PY_WITH_DEFAULTS] = 1,
[CALL_NO_KW_TYPE_1] = 1,
[CALL_NO_KW_STR_1] = 1,
[CALL_NO_KW_TUPLE_1] = 1,
[CALL_BUILTIN_CLASS] = 1,
[CALL_NO_KW_BUILTIN_O] = 1,
[CALL_NO_KW_BUILTIN_FAST] = 1,
[CALL_BUILTIN_FAST_WITH_KEYWORDS] = 1,
[CALL_NO_KW_LEN] = 1,
[CALL_NO_KW_ISINSTANCE] = 1,
[CALL_NO_KW_LIST_APPEND] = 1,
[CALL_NO_KW_METHOD_DESCRIPTOR_O] = 1,
[CALL_METHOD_DESCRIPTOR_FAST_WITH_KEYWORDS] = 1,
[CALL_NO_KW_METHOD_DESCRIPTOR_NOARGS] = 1,
[CALL_NO_KW_METHOD_DESCRIPTOR_FAST] = 1,
[CALL_FUNCTION_EX] = 1,
[MAKE_FUNCTION] = 1,
[RETURN_GENERATOR] = 1,
[BUILD_SLICE] = 1,
[FORMAT_VALUE] = 1,
[COPY] = 1,
[BINARY_OP] = 1,
[SWAP] = 1,
[EXTENDED_ARG] = 1,
[CACHE] = 1,
};

extern const int _Py_MacroOpToUOp[][2] = {
[BINARY_OP_ADD_INT] = {BINARY_OP_ADD_INT_TYPE_CHECK, BINARY_OP_ADD_INT_REST},
};
extern const PyTypeObject *_Py_UOpGuardTypes[][2] = {
[BINARY_OP_ADD_INT_TYPE_CHECK] = {&PyLong_Type, &PyLong_Type},
};
#ifdef __cplusplus
}
#endif
#endif  // Py_INTERNAL_OPCODE_MACRO_TO_MICRO
