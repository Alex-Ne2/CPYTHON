We have new tooling, in ``Tools/cases_generator``,
to generate the interpreter switch from a list of opcode definitions.
This affects only people who are adding or modifying instruction definitions.
The instruction definitions now live in ``Python/bytecodes.c``,
in the form of a custom DSL (under development).
The tooling reads this file and writes ``Python/generated_cases.c.h``,
which is then included by ``Python/ceval.c`` to provide most of the cases
of the main interpreter switch.
The DSL is described at
https://github.com/faster-cpython/ideas/blob/main/3.12/interpreter_definition.md.
