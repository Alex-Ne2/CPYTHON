Deprecate the old trashcan macros (``Py_TRASHCAN_SAFE_BEGIN``/``Py_TRASHCAN_SAFE_END``). They should be replaced by the new macros ``Py_TRASHCAN_BEGIN`` and ``Py_TRASHCAN_END``.

A tp_dealloc function that has the old macros, such as::

   static void
   mytype_dealloc(mytype *p)
   {
       PyObject_GC_UnTrack(p);
       Py_TRASHCAN_SAFE_BEGIN(p);
       ...
       Py_TRASHCAN_SAFE_END
   }

should migrate to the new macros as follows::

   static void
   mytype_dealloc(mytype *p)
   {
       PyObject_GC_UnTrack(p);
       Py_TRASHCAN_BEGIN(p, mytype_dealloc)
       ...
       Py_TRASHCAN_END
   }

Note that ``Py_TRASHCAN_BEGIN`` has a second argument which
 should be the deallocation function it is in.

To support older python versions in the same codebase, you
can define the following macros and use them throughout
the code (credit: these were copied from the ``mypy`` codebase)::

   #if PY_MAJOR_VERSION >= 3 && PY_MINOR_VERSION >= 8
   #define CPy_TRASHCAN_BEGIN(op, dealloc) Py_TRASHCAN_BEGIN(op, dealloc)
   #define CPy_TRASHCAN_END(op) Py_TRASHCAN_END
   #else
   #define CPy_TRASHCAN_BEGIN(op, dealloc) Py_TRASHCAN_SAFE_BEGIN(op)
   #define CPy_TRASHCAN_END(op) Py_TRASHCAN_SAFE_END(op)
   #endif
