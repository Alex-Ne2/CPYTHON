name: TclTk_$(SourceTag)_$(Date:yyyyMMdd)$(Rev:.rr)

resources:
  repositories:
  - repository: sources
    type: github
    endpoint: null
    name: python/cpython-source-deps

variables:
  IntDir: '$(Build.BinariesDirectory)\obj'
  ExternalsDir: '$(Build.BinariesDirectory)\externals'
  OutDir: '$(Build.ArtifactStagingDirectory)'
  Configuration: 'Release'
  
  # MUST BE SET AT QUEUE TIME
  # SigningCertificate: ''
  # SourcesRepo: 'https://github.com/python/cpython-source-deps'

jobs:
- job: Build_TclTk
  displayName: 'Tcl/Tk'
  pool:
    #name: 'Windows Release'
    vmImage: windows-latest

  workspace:
    clean: all

  steps:
    - checkout: self
    - checkout: sources@refs/tags/tcl-core-$(SourceTag)
      path: "$(ExternalsDir)\tcl-core-$(SourceTag)"
      fetchDepth: 1
    - checkout: sources@refs/tags/tk-$(SourceTag)
      path: "$(ExternalsDir)\tk-$(SourceTag)"
      fetchDepth: 1

    - powershell: |
        del -Force -EA 0 msbuild.rsp
        "/p:IntDir=$(IntDir)" >> msbuild.rsp
        "/p:ExternalsDir=$(ExternalsDir)" >> msbuild.rsp
        "/p:OutDir=$(OutDir)" >> msbuild.rsp
        "/p:tclDir=$(ExternalsDir)\tcl-core-$(SourceTag)" >> msbuild.rsp
        "/p:tkDir=$(ExternalsDir)\tk-$(SourceTag)" >> msbuild.rsp
      displayName: 'Generate msbuild.rsp'

    - powershell: |
        msbuild PCbuild\tcl.vcxproj @msbuild.rsp /p:Platform=Win32 /p:tcltkDir="$(OutDir)\win32"
        msbuild PCbuild\tk.vcxproj  @msbuild.rsp /p:Platform=Win32 /p:tcltkDir="$(OutDir)\win32"
        msbuild PCbuild\tix.vcxproj @msbuild.rsp /p:Platform=Win32 /p:tcltkDir="$(OutDir)\win32"
      displayName: 'Build for win32'

    - powershell: |
        msbuild PCbuild\tcl.vcxproj @msbuild.rsp /p:Platform=x64 /p:tcltkDir="$(OutDir)\amd64"
        msbuild PCbuild\tk.vcxproj  @msbuild.rsp /p:Platform=x64 /p:tcltkDir="$(OutDir)\amd64"
        msbuild PCbuild\tix.vcxproj @msbuild.rsp /p:Platform=x64 /p:tcltkDir="$(OutDir)\amd64"
      displayName: 'Build for amd64'

    - publish: '$(OutDir)'
      artifact: 'tcltk'
