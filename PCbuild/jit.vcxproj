<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|ARM"/>
    <ProjectConfiguration Include="Debug|ARM64"/>
    <ProjectConfiguration Include="Debug|Win32"/>
    <ProjectConfiguration Include="Debug|x64"/>
    <ProjectConfiguration Include="PGInstrument|ARM"/>
    <ProjectConfiguration Include="PGInstrument|ARM64"/>
    <ProjectConfiguration Include="PGInstrument|Win32"/>
    <ProjectConfiguration Include="PGInstrument|x64"/>
    <ProjectConfiguration Include="PGUpdate|ARM"/>
    <ProjectConfiguration Include="PGUpdate|ARM64"/>
    <ProjectConfiguration Include="PGUpdate|Win32"/>
    <ProjectConfiguration Include="PGUpdate|x64"/>
    <ProjectConfiguration Include="Release|ARM"/>
    <ProjectConfiguration Include="Release|ARM64"/>
    <ProjectConfiguration Include="Release|Win32"/>
    <ProjectConfiguration Include="Release|x64"/>
  </ItemGroup>
  <Import Project="pyproject.props"/>
  <!-- XXX -->
  <!-- Direct copy from pythoncore.vcxproj, but this one is only used for our
       own build. All other extension modules will use the copy that pythoncore
       generates. -->
  <Target Name="_UpdatePyconfig" BeforeTargets="PrepareForBuild">
    <MakeDir Directories="$(IntDir)" Condition="!Exists($(IntDir))" />
    <ItemGroup>
      <PyConfigH Remove="@(PyConfigH)" />
      <PyConfigH Include="@(ClInclude)" Condition="'%(Filename)%(Extension)' == 'pyconfig.h.in'" />
    </ItemGroup>
    <Error Text="Did not find pyconfig.h" Condition="@(ClInclude) == ''" />
    <PropertyGroup>
      <PyConfigH>@(PyConfigH->'%(FullPath)', ';')</PyConfigH>
      <PyConfigHText>$([System.IO.File]::ReadAllText($(PyConfigH)))</PyConfigHText>
      <OldPyConfigH Condition="Exists('$(IntDir)pyconfig.h')">$([System.IO.File]::ReadAllText('$(IntDir)pyconfig.h'))</OldPyConfigH>
    </PropertyGroup>
    <PropertyGroup Condition="$(DisableGil) == 'true'">
      <PyConfigHText>$(PyConfigHText.Replace('#undef Py_GIL_DISABLED', '#define Py_GIL_DISABLED 1'))</PyConfigHText>
    </PropertyGroup>
    <Message Text="Updating pyconfig.h" Condition="$(PyConfigHText.TrimEnd()) != $(OldPyConfigH.TrimEnd())" />
    <WriteLinesToFile File="$(IntDir)pyconfig.h"
                      Lines="$(PyConfigHText)"
                      Overwrite="true"
                      Condition="$(PyConfigHText.TrimEnd()) != $(OldPyConfigH.TrimEnd())" />
  </Target>
  <Target Name="Build" DependsOnTargets="_UpdatePyconfig;FindPythonForBuild" Condition="'$(UseJIT)' == 'true'">
	  <Exec Condition="$(Configuration) != 'Debug' and $(Platform) == 'Win32'"
          Command='$(PythonForBuild) "$(PySourcePath)Tools\jit\build.py" i686-pc-windows-msvc'
          WorkingDirectory="$(PySourcePath)"/>
	  <Exec Condition="$(Configuration) == 'Debug' and $(Platform) == 'Win32'"
          Command='$(PythonForBuild) "$(PySourcePath)Tools\jit\build.py" i686-pc-windows-msvc --debug'
          WorkingDirectory="$(PySourcePath)"/>
	  <Exec Condition="$(Configuration) != 'Debug' and $(Platform) == 'x64'"
          Command='$(PythonForBuild) "$(PySourcePath)Tools\jit\build.py" x86_64-pc-windows-msvc'
          WorkingDirectory="$(PySourcePath)"/>
	  <Exec Condition="$(Configuration) == 'Debug' and $(Platform) == 'x64'"
          Command='$(PythonForBuild) "$(PySourcePath)Tools\jit\build.py" x86_64-pc-windows-msvc --debug'
          WorkingDirectory="$(PySourcePath)"/>
  </Target>
  <Target Name="CleanAll">
    <Delete Files="$(PySourcePath)Python\jit_stencils.h"/>
  </Target>
</Project>
